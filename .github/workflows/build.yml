name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x gradlew
      - name: Run PIT tests
        run: ./gradlew pitest --info
      - name: Debug Consolidated Report
        run: cat build/reports/pitest/mutations.xml
      - name: Validate PIT coverage
        run: |
          if [ ! -f build/reports/pitest/index.html ]; then
            echo "PIT report not found. Mutation testing might have failed.";
            exit 1;
          fi
          coverage=$(grep -oP 'Mutation score: \K[0-9]+' build/reports/pitest/index.html || echo 0)
          echo "Mutation score: $coverage"
          if (( $coverage < 50 )); then
            echo "Mutation score is below 50%. Failing the build.";
            exit 1;
          fi
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
